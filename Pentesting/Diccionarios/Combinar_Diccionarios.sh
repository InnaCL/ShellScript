#!/usr/bin/env bash
# -*- ENCODING: UTF-8 -*-
##
## @author     Raúl Caro Pastorino
## @copyright  Copyright © 2018 Raúl Caro Pastorino
## @license    https://wwww.gnu.org/licenses/gpl.txt
## @email      dev@fryntiz.es
## @web        https://fryntiz.es
## @github     https://github.com/fryntiz
## @gitlab     https://gitlab.com/fryntiz
## @twitter    https://twitter.com/fryntiz
##
##             Guía de estilos aplicada:
## @style      https://github.com/fryntiz/Bash_Style_Guide

############################
##     INSTRUCCIONES      ##
############################
## Este script combina todas las palabras de dos diccionarios

############################
##       CONSTANTES       ##
############################
AM="\033[1;33m"  ## Color Amarillo
RO="\033[1;31m"  ## Color Rojo
VE="\033[1;32m"  ## Color Verde
CL="\e[0m"       ## Limpiar colores
AZ="\033[1;34m"
CY="\033[1;36m"

###########################
##       VARIABLES       ##
###########################
espacio=""
eliminar_ceros=false
escribir_salida=false
sufijo="_temporal"

###########################
##       FUNCIONES       ##
###########################
clear

mkdir tmp

mensaje() {
    echo -e "  $RO Modo de uso:"
    echo -e " $AM$0 [OPCIONES] <Diccionario1> <Diccionario2>"
    echo ""
    echo -e "   $AZ Opciones:"
    echo -e "   $VE -e, Insertar espacio entre cada palabra"
    echo -e "   $CY -h, Mostrar esta ayuda"
    echo -e "   $VE -z, Omitir ceros en los diccionarios"
    echo -e "   $CY -o, Especificar archivo de salida."
    echo ""
    echo ""
    echo -e "$AM Este script combinará todas las posibilidades del$RO Diccionario1$AM con el$RO Diccionario2$AM detrás."
    echo -e " Para hacerlo al revés simplemente cambia el orden de los diccionarios al ejecutar el script$CL"
    echo ""
}

if [[ $# -eq 0 ]]  ## Comprueba que existen parámentros
    then
        mensaje
        exit 1
fi

while getopts "zeho:" Opcion
    do
        case $Opcion in
            e)
                espacio=" "
                ;;
            h)
                echo "Menu de ayuda"
                echo ""
                mensaje
                exit 1
                ;;
            z)
                eliminar_ceros='true'
                ;;
            o)
                salida=$OPTARG
                escribir_salida='true'
                ;;
            ?)
                echo "opción $OPTARG no reconocida"
                ;;
            :)
                echo "opción $OPTARG requiere un argumento"
                ;;
        esac
    done

shift $(( OPTIND -1 ))

if [[ -z "$1" ]] || [[ -z "$2" ]]; then
    echo "Faltan argumentos válidos"
    exit 1
fi

if [[ ! -e "$1" ]]; then
    echo "No se ha podido encontrar $1"
    exit 1
fi

if [[ ! -e "$2" ]]; then
    echo "No se ha podido encontrar $2"
    exit 1
fi

for f1 in $(if [[ "$eliminar_ceros" = 'true' ]]; then
        cat $1|tr -d "0" #elimina el caracter "0"
    else
        cat $1 |tr -d "\r"
    fi)

do
    for f2 in $(if [[ "$eliminar_ceros" = 'true' ]]
        then
            cat $2|tr -d "0"
        else
            cat $2 |tr -d "\r"
        fi)
    
    do
        if [[ "$escribir_salida" = 'true' ]]; then
            echo $f1$espacio$f2 >> tmp/$salida  ##Escribir salida en archivo omitiendo "intro"
            echo $f1$espacio$f2
        else
            echo $f1$espacio$f2 |tr -d "\r"  ## Mostrar salida sin escribirla omitiendo "intro"
        fi
    done
done

if [[ -f "tmp/$salida" ]]; then
        #sort /tmp/Desordenado-$salida > $salida
        cat tmp/$salida | sort | uniq > $salida
        if [[ "$salida" ]]; then
            sleep 5
            rm tmp/$salida
            rm -R tmp
            chmod 777 $salida
        else
            echo -e "$RO Ha ocurrido algún problema"
            echo -e " El diccionario no ha podido crearse correctamente"
            echo -e " Comprueba el archivo tmp/$salida"
            echo -e " Este archivo contendrá el diccionario sin ordenar ni filtrar"
            echo -e " Puedes ponerte en contacto con el creador del script si no consigues solucionar el problema$CL"
        fi
fi
